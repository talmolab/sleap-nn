name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "sleap_nn/**"
      - "tests/**"
      - ".github/workflows/ci.yml"
      - "pyproject.toml"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: false

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dev dependencies and torch
        run: uv sync --group default --extra dev --extra torch-cpu --extra ml

      - name: Run Black
        run: black --check sleap_nn tests

      - name: Run Ruff
        run: ruff check sleap_nn/

  tests:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-14"]
        python: [3.11]

    name: Tests (${{ matrix.os }}, Python ${{ matrix.python }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: false

      - name: Set up Python
        run: uv python install ${{ matrix.python }}

      - name: Install dev dependencies and torch
        run: uv sync --group default --extra dev --extra torch-cpu --extra ml

      - name: Print environment info
        run: |
          echo "=== System Python ==="
          which python
          python --version
          echo "=== UV Environment ==="
          uv run python --version
          uv run python -c "import sys; print('Python executable:', sys.executable)"
          echo "=== UV Environment NumPy Check ==="
          uv run python -c "import numpy; print('NumPy version:', numpy.__version__); print('NumPy location:', numpy.__file__)" || echo "NumPy import failed in uv environment"
          echo "=== PIP EXECUTABLE COMPARISON ==="
          uv run python -c "import subprocess; print('pip from uv run python:', subprocess.check_output(['pip', '--version']).decode().strip())" || echo "pip not found from python"
          uv run pip --version || echo "uv run pip failed"
          echo "=== UV pip list vs python -m pip list ==="
          echo "--- uv run pip list ---"
          uv run pip list | head -20
          echo "--- uv run python -m pip list ---"
          uv run python -m pip list | head -20
          echo "=== UV ENVIRONMENT CHECK ==="
          uv run python -c "import os; print('VIRTUAL_ENV:', os.environ.get('VIRTUAL_ENV', 'Not set'))"
          echo "=== Import Test ==="
          uv run python -c "import torch; import lightning; import kornia; print('All imports successful')" || echo "Import test failed"

      - name: Run pytest
        run: |
          echo "=== Final environment check before tests ==="
          uv run python -c "import numpy, torch, lightning, kornia; print(f'All packages available: numpy={numpy.__version__}, torch={torch.__version__}')"
          echo "=== Running pytest ==="
          uv run pytest --cov=sleap_nn --cov-report=xml --durations=-1 tests/

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          verbose: false
          token: ${{ secrets.CODECOV_TOKEN }}
