name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "sleap_nn/**"
      - "tests/**"
      - ".github/workflows/ci.yml"
      - "pyproject.toml"

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: pip install uv

      - name: Create virtual environment and install dependencies
        run: |
          uv venv .venv
          echo "VENV_BIN=.venv/bin" >> $GITHUB_ENV
          uv pip install --editable .[dev]

      - name: Run Black
        run: $VENV_BIN/black --check sleap_nn tests

      - name: Run Ruff
        run: $VENV_BIN/ruff check sleap_nn/

  tests:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-14"]
        python: [3.11]

    name: Tests (${{ matrix.os }}, Python ${{ matrix.python }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install uv
        run: pip install uv

      - name: Create virtual environment and install dependencies
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            uv venv .venv
            echo "VENV_BIN=.venv\\Scripts" >> $GITHUB_ENV
          else
            uv venv .venv
            echo "VENV_BIN=.venv/bin" >> $GITHUB_ENV
          fi
          $VENV_BIN/uv pip install --editable .[dev]

      - name: Print environment info
        run: |
          $VENV_BIN/python --version
          $VENV_BIN/pip freeze

      - name: Test with pytest (with coverage)
        run: |
          $VENV_BIN/pytest --cov=sleap_nn --cov-report=xml --durations=-1 tests/

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          verbose: false
          token: ${{ secrets.CODECOV_TOKEN }}