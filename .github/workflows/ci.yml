name: CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "sleap_nn/**"
      - "tests/**"
      - ".github/workflows/ci.yml"
      - "pyproject.toml"

defaults:
  run:
    shell: bash -l {0} # Enable conda environment

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: sleap-nn-dev
          python-version: 3.11
          miniforge-variant: Miniforge3
          use-mamba: true
          auto-activate-base: false

      - name: Set up uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: false

      - name: Install dev dependencies and torch
        run: uv sync --extra dev --extra torch --extra ml
        # run: uv pip install -e ".[dev, torch]"

      - name: Run Black
        run: uv run black --check sleap_nn tests

      - name: Run Ruff
        run: uv run ruff check sleap_nn/

  tests:
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-14"]
        python: [3.11]

    name: Tests (${{ matrix.os }}, Python ${{ matrix.python }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: sleap-nn-dev
          python-version: ${{ matrix.python }}
          miniforge-variant: Miniforge3
          use-mamba: true
          auto-activate-base: false

      - name: Set up uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: false

      - name: Install dev dependencies and torch
        run: uv sync --extra dev --extra torch --extra ml
        # run: uv pip install -e ".[dev, torch]"

      - name: Print environment info
        run: |
          which python
          python --version
          echo "=== UV Environment ==="
          uv run python --version
          uv run python -c "import sys; print('Python executable:', sys.executable)"
          echo "=== NumPy Check ==="
          uv run python -c "import numpy; print('NumPy version:', numpy.__version__); print('NumPy location:', numpy.__file__)"
          echo "=== Import Test ==="
          uv run python -c "import torch; import lightning; import kornia; print('All imports successful')"
          uv run pip freeze

      - name: Run pytest
        run: uv run pytest --cov=sleap_nn --cov-report=xml --durations=-1 tests/

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          verbose: false
          token: ${{ secrets.CODECOV_TOKEN }}
